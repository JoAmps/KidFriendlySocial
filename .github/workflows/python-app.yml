# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: CI/CD
#
on:
  push:
    branches:
      - main
      
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - run: |
          git fetch --prune --unshallow

      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run Flake8
        run: | 
          pip install flake8 
          flake8 --ignore=E501,E402 

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Pull model from DVC
        run: |
          pip install "dvc[s3]"
          cd src/ML_model/Predictive_model/model
          dvc pull bad_tweets_detector_model.dvc

      - name: Run Unit and Integration Tests on data and ML models
        env:
          SECRET : ${{ secrets.SECRET }}
          OPEN_API_KEY : ${{ secrets.OPEN_API_KEY }}
        run: |
         pip install pytest==7.2.1
         cd src/ML_model
         pytest -s -v test_data.py test_inferences.py  --disable-warnings


      - name: Start MySQL service and check status
        run: |
         sudo service mysql start
         sudo service mysql status


      - name: Run Unit and Integration Tests on endpoints and data to endpoints
        env:
          SECRET : ${{ secrets.SECRET }}
          OPEN_API_KEY : ${{ secrets.OPEN_API_KEY }}
        run: |
         pip install pytest==7.2.1
         pip install bcrypt==4.0.1
         cd src/authentication_service/test_auth
         pytest -s -v test_data_to_endpoints.py test_endpoints.py  --disable-warnings 


